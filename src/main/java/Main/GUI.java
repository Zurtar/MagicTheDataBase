package Main;

import forohfor.scryfall.api.Card;

import java.util.ArrayList;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreeSelectionModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Steve
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    DefaultTableModel tableModel;
    ArrayList<Card> cardList;

    public GUI() {
        initComponents();
        clearResultTable();

        ListSelectionModel listSelectionModel = resultTable.getSelectionModel();
        listSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        listSelectionModel.addListSelectionListener((ListSelectionEvent e) -> {
            if (e.getValueIsAdjusting()) {
                return;
            }
            GUI.deckTree.clearSelection();
            updateCardInfo(0);
        });

        //DECK TREE
        TreeInteraction.setupTree();

        deckTree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
        deckTree.addTreeSelectionListener((TreeSelectionEvent e) -> {
            TreeNode node = (TreeNode) deckTree.getLastSelectedPathComponent();
            resultTable.clearSelection();
            
      
            
            if (node == null) {
                return;
            }
            System.out.println("Selection Listener Fired");
            //updateCardInfo();
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        largeImageFrame = new javax.swing.JFrame();
        largeImageLabel = new javax.swing.JLabel();
        largeImageHeader = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        searchPanel = new javax.swing.JPanel();
        resultScrollPane = new javax.swing.JScrollPane();
        resultTable = new javax.swing.JTable();
        searchButton = new javax.swing.JButton();
        cmcComboBox = new javax.swing.JComboBox<>();
        cardTypeComboBox = new javax.swing.JComboBox<>();
        titleLabel = new javax.swing.JLabel();
        creatureTypeComboBox = new javax.swing.JComboBox<>();
        colourComboBox = new javax.swing.JComboBox<>();
        searchField = new javax.swing.JTextField();
        resultPageCountLabel = new javax.swing.JLabel();
        filterCMCBox = new javax.swing.JCheckBox();
        filterColourBox = new javax.swing.JCheckBox();
        filterCardBox = new javax.swing.JCheckBox();
        filterCreatureTypeBox = new javax.swing.JCheckBox();
        filterOracleBox = new javax.swing.JCheckBox();
        filterNameBox = new javax.swing.JCheckBox();
        oracleText = new javax.swing.JTextField();
        cardInfoTabbedPane = new javax.swing.JTabbedPane();
        cardDescriptionPanel = new javax.swing.JPanel();
        cardNameLabel = new javax.swing.JLabel();
        cardNameDisplay = new javax.swing.JTextField();
        setLabel = new javax.swing.JLabel();
        setDisplay = new javax.swing.JTextField();
        manaCostLabel = new javax.swing.JLabel();
        manaCostDisplay = new javax.swing.JTextField();
        cardTypeLabel = new javax.swing.JLabel();
        cardTypeDisplay = new javax.swing.JTextField();
        colourLabel = new javax.swing.JLabel();
        colourDisplay = new javax.swing.JTextField();
        oracelTextLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        cardOracleDisplay = new javax.swing.JTextArea();
        cardImagePanel = new javax.swing.JPanel();
        cardImageLabel = new javax.swing.JLabel();
        addCardButton = new javax.swing.JButton();
        removeCardButton = new javax.swing.JButton();
        deckInfoTabbedPane = new javax.swing.JTabbedPane();
        deckPanel = new javax.swing.JPanel();
        deckScrollPane = new javax.swing.JScrollPane();
        deckTree = new javax.swing.JTree();
        deckInfoPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        deckCommentArea = new javax.swing.JTextArea();
        deckCommentLabel = new javax.swing.JLabel();
        deckNameLabel = new javax.swing.JLabel();
        deckNameField = new javax.swing.JTextField();
        deckLabel = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        deckMenu = new javax.swing.JMenu();
        newDeckMenuItem = new javax.swing.JMenuItem();
        loadDeckMenuItem = new javax.swing.JMenuItem();
        saveDeckMenuItem = new javax.swing.JMenuItem();

        largeImageLabel.setMaximumSize(new java.awt.Dimension(488, 700));
        largeImageLabel.setMinimumSize(new java.awt.Dimension(488, 680));
        largeImageLabel.setPreferredSize(new java.awt.Dimension(488, 690));

        largeImageHeader.setText("Large Image Window");

        javax.swing.GroupLayout largeImageFrameLayout = new javax.swing.GroupLayout(largeImageFrame.getContentPane());
        largeImageFrame.getContentPane().setLayout(largeImageFrameLayout);
        largeImageFrameLayout.setHorizontalGroup(
            largeImageFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(largeImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(largeImageHeader)
        );
        largeImageFrameLayout.setVerticalGroup(
            largeImageFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(largeImageFrameLayout.createSequentialGroup()
                .addComponent(largeImageHeader)
                .addGap(11, 11, 11)
                .addComponent(largeImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1260, 760));

        searchPanel.setMaximumSize(new java.awt.Dimension(999999, 999999));
        searchPanel.setMinimumSize(new java.awt.Dimension(0, 0));
        searchPanel.setPreferredSize(new java.awt.Dimension(1260, 760));
        searchPanel.setVerifyInputWhenFocusTarget(false);

        resultTable.setBackground(new java.awt.Color(204, 204, 204));
        resultTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        resultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Sets", "Mana costs", "Card Type", "Color(s)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        resultTable.setRowHeight(24);
        resultScrollPane.setViewportView(resultTable);

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        cmcComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3","4","5","6","7","8","9","10","11","12", }));

        cardTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enchantment", "Creature", "Artifact", "Land","Instant","Sorcery" }));

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(0, 102, 0));
        titleLabel.setText("Magic: The Database");

        creatureTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Advisor","Aetherborn","Ally","Angel","Antelope","Ape","Archer","Archon","Army","Artificer","Assassin","Assembly-Worker","Atog","Aurochs","Avatar","Azra","Badger","Barbarian","Basilisk","Bat","Bear","Beast","Beeble","Berserker","Bird","Blinkmoth","Boar","Bringer","Brushwagg","Camarid","Camel","Caribou","Carrier","Cat","Centaur","Cephalid","Chimera","Citizen","Cleric","Cockatrice","Construct","Coward","Crab","Crocodile","Cyclops","Dauthi","Demigod","Demon","Deserter","Devil","Dinosaur","Djinn","Dragon","Drake","Dreadnought","Drone","Druid","Dryad","Dwarf","Efreet","Egg","Elder","Eldrazi","Elemental","Elephant","Elf","Elk","Eye","Faerie","Ferret","Fish","Flagbearer","Fox","Frog","Fungus","Gargoyle","Germ","Giant","Gnome","Goat","Goblin","God","Golem","Gorgon","Graveborn","Gremlin","Griffin","Hag","Harpy","Hellion","Hippo","Hippogriff","Homarid","Homunculus","Horror","Horse","Hound","Human","Hydra","Hyena","Illusion","Imp","Incarnation","Insect","Jackal","Jellyfish","Juggernaut","Kavu","Kirin","Kithkin","Knight","Kobold","Kor","Kraken","Lamia","Lammasu","Leech","Leviathan","Lhurgoyf","Licid","Lizard","Manticore","Masticore","Mercenary","Merfolk","Metathran","Minion","Minotaur","Mole","Monger","Mongoose","Monk","Monkey","Moonfolk","Mouse","Mutant","Myr","Mystic","Naga","Nautilus","Nephilim","Nightmare","Nightstalker","Ninja","Noble","Noggle","Nomad","Nymph","Octopus","Ogre","Ooze","Orb","Orc","Orgg","Otter","Ouphe","Ox","Oyster","Pangolin","Peasant","Pegasus","Pentavite","Pest","Phelddagrif","Phoenix","Pilot","Pincher","Pirate","Plant","Praetor","Prism","Processor","Rabbit","Rat","Rebel","Reflection","Rhino","Rigger","Rogue","Sable","Salamander","Samurai","Sand","Saproling","Satyr","Scarecrow","Scion","Scorpion","Scout","Sculpture","Serf","Serpent","Servo","Shade","Shaman","Shapeshifter","Shark","Sheep","Siren","Skeleton","Slith","Sliver","Slug","Snake","Soldier","Soltari","Spawn","Specter","Spellshaper","Sphinx","Spider","Spike","Spirit","Splinter","Sponge","Squid","Squirrel","Starfish","Surrakar","Survivor","Tentacle","Tetravite","Thalakos","Thopter","Thrull","Treefolk","Trilobite","Triskelavite","Troll","Turtle","Unicorn","Vampire","Vedalken","Viashino","Volver","Wall","Warlock","Warrior","Weird","Werewolf","Whale","Wizard","Wolf","Wolverine","Wombat","Worm","Wraith","Wurm","Yeti","Zombie","Zubera" }));

        colourComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "White", "Blue", "Black", "Red", "Green" }));

        filterCMCBox.setText("Filter By CMC");

        filterColourBox.setText("Filter By Colour");

        filterCardBox.setText("Filter By Cardtype");

        filterCreatureTypeBox.setText("Filter By Creature type");

        filterOracleBox.setText("Filter By Oracle Text");

        filterNameBox.setText("Filter By Name");

        oracleText.setMinimumSize(new java.awt.Dimension(28, 20));
        oracleText.setPreferredSize(new java.awt.Dimension(28, 20));

        cardInfoTabbedPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cardInfoTabbedPane.setPreferredSize(new java.awt.Dimension(258, 383));

        cardDescriptionPanel.setPreferredSize(new java.awt.Dimension(258, 383));

        cardNameLabel.setText("Card Name:");

        cardNameDisplay.setEditable(false);

        setLabel.setText("Set(s):");

        setDisplay.setEditable(false);

        manaCostLabel.setText("Mana Cost:");

        manaCostDisplay.setEditable(false);

        cardTypeLabel.setText("Card Type:");

        cardTypeDisplay.setEditable(false);

        colourLabel.setText("Colour(s):");

        colourDisplay.setEditable(false);

        oracelTextLabel.setText("Oracle Text:");

        cardOracleDisplay.setEditable(false);
        cardOracleDisplay.setColumns(20);
        cardOracleDisplay.setLineWrap(true);
        cardOracleDisplay.setRows(5);
        jScrollPane1.setViewportView(cardOracleDisplay);

        javax.swing.GroupLayout cardDescriptionPanelLayout = new javax.swing.GroupLayout(cardDescriptionPanel);
        cardDescriptionPanel.setLayout(cardDescriptionPanelLayout);
        cardDescriptionPanelLayout.setHorizontalGroup(
            cardDescriptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardDescriptionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cardDescriptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(cardDescriptionPanelLayout.createSequentialGroup()
                        .addComponent(oracelTextLabel)
                        .addGap(0, 171, Short.MAX_VALUE))
                    .addGroup(cardDescriptionPanelLayout.createSequentialGroup()
                        .addGroup(cardDescriptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cardNameLabel)
                            .addComponent(setLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(cardDescriptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cardNameDisplay)
                            .addComponent(setDisplay)))
                    .addGroup(cardDescriptionPanelLayout.createSequentialGroup()
                        .addComponent(manaCostLabel)
                        .addGap(12, 12, 12)
                        .addComponent(manaCostDisplay))
                    .addGroup(cardDescriptionPanelLayout.createSequentialGroup()
                        .addComponent(cardTypeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cardTypeDisplay))
                    .addGroup(cardDescriptionPanelLayout.createSequentialGroup()
                        .addComponent(colourLabel)
                        .addGap(18, 18, 18)
                        .addComponent(colourDisplay)))
                .addContainerGap())
        );
        cardDescriptionPanelLayout.setVerticalGroup(
            cardDescriptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardDescriptionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cardDescriptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cardNameLabel)
                    .addComponent(cardNameDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cardDescriptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setLabel)
                    .addComponent(setDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cardDescriptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(manaCostLabel)
                    .addComponent(manaCostDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cardDescriptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cardTypeLabel)
                    .addComponent(cardTypeDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cardDescriptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(colourLabel)
                    .addComponent(colourDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(oracelTextLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        cardInfoTabbedPane.addTab("Card Description", cardDescriptionPanel);

        cardImagePanel.setPreferredSize(new java.awt.Dimension(258, 383));

        cardImageLabel.setFont(new java.awt.Font("Tahoma", 3, 48)); // NOI18N
        cardImageLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cardImageLabel.setPreferredSize(new java.awt.Dimension(258, 383));

        javax.swing.GroupLayout cardImagePanelLayout = new javax.swing.GroupLayout(cardImagePanel);
        cardImagePanel.setLayout(cardImagePanelLayout);
        cardImagePanelLayout.setHorizontalGroup(
            cardImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cardImageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
        );
        cardImagePanelLayout.setVerticalGroup(
            cardImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cardImageLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
        );

        cardInfoTabbedPane.addTab("Card Image", cardImagePanel);

        addCardButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/addIcon.png"))); // NOI18N
        addCardButton.setPreferredSize(new java.awt.Dimension(39, 39));
        addCardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCardButtonActionPerformed(evt);
            }
        });

        removeCardButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/removeIcon.png"))); // NOI18N
        removeCardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeCardButtonActionPerformed(evt);
            }
        });

        deckInfoTabbedPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        deckInfoTabbedPane.setMinimumSize(new java.awt.Dimension(240, 248));
        deckInfoTabbedPane.setPreferredSize(new java.awt.Dimension(240, 248));

        deckPanel.setPreferredSize(new java.awt.Dimension(231, 217));

        deckTree.setBackground(new java.awt.Color(240, 240, 240));
        deckTree.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Deck");
        deckTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        deckScrollPane.setViewportView(deckTree);

        javax.swing.GroupLayout deckPanelLayout = new javax.swing.GroupLayout(deckPanel);
        deckPanel.setLayout(deckPanelLayout);
        deckPanelLayout.setHorizontalGroup(
            deckPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(deckScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
        );
        deckPanelLayout.setVerticalGroup(
            deckPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(deckScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
        );

        deckInfoTabbedPane.addTab("List", deckPanel);

        deckCommentArea.setColumns(20);
        deckCommentArea.setRows(5);
        jScrollPane2.setViewportView(deckCommentArea);

        deckCommentLabel.setText("Comments:");

        deckNameLabel.setText("Deck Name:");

        javax.swing.GroupLayout deckInfoPanelLayout = new javax.swing.GroupLayout(deckInfoPanel);
        deckInfoPanel.setLayout(deckInfoPanelLayout);
        deckInfoPanelLayout.setHorizontalGroup(
            deckInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deckInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(deckInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(deckInfoPanelLayout.createSequentialGroup()
                        .addGroup(deckInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deckCommentLabel)
                            .addGroup(deckInfoPanelLayout.createSequentialGroup()
                                .addComponent(deckNameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deckNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 61, Short.MAX_VALUE)))
                .addContainerGap())
        );
        deckInfoPanelLayout.setVerticalGroup(
            deckInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deckInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(deckInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deckNameLabel)
                    .addComponent(deckNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deckCommentLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                .addContainerGap())
        );

        deckInfoTabbedPane.addTab(" Info", deckInfoPanel);

        deckLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deckLabel.setText("Deck");

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(titleLabel)
                            .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(searchButton)
                        .addGap(15, 15, 15)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(filterColourBox)
                            .addComponent(filterCMCBox)
                            .addComponent(filterCardBox)
                            .addComponent(filterCreatureTypeBox))
                        .addGap(25, 25, 25)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(colourComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmcComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cardTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(creatureTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(resultScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 925, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addGap(600, 600, 600)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(searchPanelLayout.createSequentialGroup()
                                .addComponent(filterOracleBox)
                                .addGap(37, 37, 37)
                                .addComponent(oracleText, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(filterNameBox))))
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(searchPanelLayout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(deckLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(addCardButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(removeCardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                            .addGap(5, 5, 5)
                            .addComponent(deckInfoTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cardInfoTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(searchPanelLayout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(titleLabel)
                                .addGap(7, 7, 7)
                                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(searchPanelLayout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addComponent(searchButton))
                            .addGroup(searchPanelLayout.createSequentialGroup()
                                .addComponent(filterColourBox)
                                .addGap(7, 7, 7)
                                .addComponent(filterCMCBox)
                                .addGap(7, 7, 7)
                                .addComponent(filterCardBox)
                                .addGap(7, 7, 7)
                                .addComponent(filterCreatureTypeBox))
                            .addGroup(searchPanelLayout.createSequentialGroup()
                                .addComponent(colourComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(cmcComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(cardTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(creatureTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(7, 7, 7)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(filterOracleBox)
                            .addComponent(oracleText, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addComponent(filterNameBox)
                        .addGap(0, 0, 0)
                        .addComponent(resultScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cardInfoTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deckLabel)
                            .addComponent(addCardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(removeCardButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deckInfoTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(29, 29, 29))
        );

        cardInfoTabbedPane.getAccessibleContext().setAccessibleName("Card Info");

        deckMenu.setText("Deck Editor");

        newDeckMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newDeckMenuItem.setText("New Deck");
        newDeckMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActionPerformed(evt);
            }
        });
        deckMenu.add(newDeckMenuItem);

        loadDeckMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        loadDeckMenuItem.setText("Load Deck");
        deckMenu.add(loadDeckMenuItem);

        saveDeckMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveDeckMenuItem.setText("Save Deck");
        deckMenu.add(saveDeckMenuItem);

        menuBar.add(deckMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ActionPerformed

    private void addCardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCardButtonActionPerformed
        // TODO add your handling code here:
        TreeInteraction.addTreeNode(cardList.get(resultTable.getSelectedRow()));
    }//GEN-LAST:event_addCardButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        cardList = ScryfallInteraction.search(searchField.getText());
        if (cardList.isEmpty()) {
            addRow();
            resultTable.setValueAt("No Cards Were Found.", 0, 0);
            return;
        }
        setResultTable(cardList);
    }//GEN-LAST:event_searchButtonActionPerformed

    private void removeCardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeCardButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_removeCardButtonActionPerformed

    private void updateCardInfo(int source) {
        Card c = null;
        if (source == 0) {
            c = cardList.get(resultTable.getSelectedRow());
        } else {
        }
        cardImageLabel.setIcon(ScryfallInteraction.getCardImage(c));
        cardNameDisplay.setText(c.getName());
        setDisplay.setText(c.getSetCode());
        manaCostDisplay.setText(c.getManaCost());
        cardTypeDisplay.setText(c.getTypeLine());
        if (!c.getColorIdentity().isEmpty()) {
            colourDisplay.setText(c.getColorIdentity().get(0));
        }
        cardOracleDisplay.setText(c.getOracleText());
    }

    private void setResultTable(ArrayList<Card> cardList) {
        //updating the size of our JTable
        tableModel.setRowCount(cardList.size());
        resultTable.setModel(tableModel);

        //Filling in the table with our card data
        for (int i = 0; i < cardList.size(); i++) {
            Card currentCard = cardList.get(i);
            resultTable.setValueAt(currentCard.getName(), i, 0);
            resultTable.setValueAt(currentCard.getSetCode(), i, 1);
            resultTable.setValueAt(currentCard.getManaCost(), i, 2);
            resultTable.setValueAt(currentCard.getTypeLine(), i, 3);
            resultTable.setValueAt(currentCard.getColorIdentity(), i, 4);
        }
    }

    private void addRow() {
        tableModel.addRow(new Object[5]);
        tableModel.fireTableDataChanged();
    }

    private void clearResultTable() {
        tableModel = new DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Name", "Sets", "Mana costs", "Card Type", "Color(s)"
                }
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        resultTable.setModel(tableModel);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
            * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
             */
 /*   try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
            javax.swing.UIManager.setLookAndFeel(info.getClassName());
            break;
            
            }
            }
            //lol exception machine go brrrr
            } catch (Exception ex) {
            java.util.logging.Logger.getLogger(GUI.class
            .getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }*/
            javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            //</editor-fold>

        } catch (Exception ex) {
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCardButton;
    public static javax.swing.JPanel cardDescriptionPanel;
    public static javax.swing.JLabel cardImageLabel;
    public static javax.swing.JPanel cardImagePanel;
    public static javax.swing.JTabbedPane cardInfoTabbedPane;
    public static javax.swing.JTextField cardNameDisplay;
    public static javax.swing.JLabel cardNameLabel;
    private javax.swing.JTextArea cardOracleDisplay;
    public static javax.swing.JComboBox<String> cardTypeComboBox;
    public static javax.swing.JTextField cardTypeDisplay;
    public static javax.swing.JLabel cardTypeLabel;
    public static javax.swing.JComboBox<String> cmcComboBox;
    public static javax.swing.JComboBox<String> colourComboBox;
    public static javax.swing.JTextField colourDisplay;
    public static javax.swing.JLabel colourLabel;
    public static javax.swing.JComboBox<String> creatureTypeComboBox;
    private javax.swing.JTextArea deckCommentArea;
    private javax.swing.JLabel deckCommentLabel;
    private javax.swing.JPanel deckInfoPanel;
    private javax.swing.JTabbedPane deckInfoTabbedPane;
    private javax.swing.JLabel deckLabel;
    private javax.swing.JMenu deckMenu;
    private javax.swing.JTextField deckNameField;
    private javax.swing.JLabel deckNameLabel;
    private javax.swing.JPanel deckPanel;
    private javax.swing.JScrollPane deckScrollPane;
    public static javax.swing.JTree deckTree;
    public static javax.swing.JCheckBox filterCMCBox;
    public static javax.swing.JCheckBox filterCardBox;
    public static javax.swing.JCheckBox filterColourBox;
    public static javax.swing.JCheckBox filterCreatureTypeBox;
    public static javax.swing.JCheckBox filterNameBox;
    public static javax.swing.JCheckBox filterOracleBox;
    public static javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JFrame largeImageFrame;
    private javax.swing.JLabel largeImageHeader;
    private javax.swing.JLabel largeImageLabel;
    private javax.swing.JMenuItem loadDeckMenuItem;
    public static javax.swing.JTextField manaCostDisplay;
    public static javax.swing.JLabel manaCostLabel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem newDeckMenuItem;
    public static javax.swing.JLabel oracelTextLabel;
    public static javax.swing.JTextField oracleText;
    private javax.swing.JButton removeCardButton;
    private javax.swing.JLabel resultPageCountLabel;
    private javax.swing.JScrollPane resultScrollPane;
    public static javax.swing.JTable resultTable;
    private javax.swing.JMenuItem saveDeckMenuItem;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchField;
    public static javax.swing.JPanel searchPanel;
    public static javax.swing.JTextField setDisplay;
    public static javax.swing.JLabel setLabel;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
